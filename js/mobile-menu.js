"use strict";var scoringData={target:new URLSearchParams(window.location.search).get("numquestions"),countAll:new URLSearchParams(window.location.search).get("count"),startTime:(new Date).getTime(),doSetup:"create"==new URLSearchParams(window.location.search).get("type")};function setScore(){let e=(new Date).getTime()-scoringData.startTime;$("#results-duration").val(e),$("#results-total").val(score.total),$("#results-correct").val(score.correct),NaN!=parseInt(scoringData.target)&&null!=scoringData.countAll&&$("#progress-fill").css("width",("all"==scoringData.countAll?score.total:score.correct)/parseInt(scoringData.target)*100+"%")}1==scoringData.doSetup&&(window.location.href="./practice-setup.html"),NaN!=parseInt(scoringData.target)&&null!=scoringData.countAll&&scoringData.target!=1/0||($("header").addClass("infinite"),$("#progress-fill").css("width","100%")),history.replaceState({},"","practice.html"),$(document).ready((function(){$(document).on("focus",":input",(function(){$(this).attr("autocomplete","off")}))}));var score={number:0,correct:0,incorrect:0,total:0},problemTime={"max-perfect":2,allotted:18,"max-score":1e3,score:0,problems:0,"incorrect-deduction":100};function split(e){let t=[];try{t=JSON.parse(localStorage.userData)[e]}catch(r){console.error("Could not split var: ",r," attempting fallback to splitting on ',' "),t=e.split(",")}return t}function changeScore(e){if(1==e){score.correct+=1;let e=((new Date).getTime()-questionStart)/1e3;e-=problemTime["max-perfect"],e=Math.max(0,e),score.number+=Math.max(0,parseInt(problemTime["max-score"]*((problemTime.allotted-e)/problemTime.allotted)))}else score.incorrect+=1,score.number-=problemTime["incorrect-deduction"],score.number=Math.max(score.number,0);score.total+=1,setScore()}$.getJSON("/VITE/verbs.json").done((function(e){verbs=e,showQuestion(new Conjugate)})).fail((function(e){console.error("Could not load verbs.json :(",e)}));
